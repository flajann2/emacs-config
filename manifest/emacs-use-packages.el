(use-package async :ensure t)
(async-bytecomp-package-mode 1)

(setq use-package-verbose t)

(use-package ht                   									:ensure t)
(use-package treemacs             									:ensure t)
(use-package blamer               									:ensure t)
(use-package elpaca               									:ensure t)
(use-package org-superstar        									:ensure t)
(use-package handlebars-mode												:ensure t)
(use-package zenburn-theme   												:ensure t)
(use-package irony																	:ensure t)
(use-package shm																		:ensure t)
(use-package face-shift															:ensure t)
(use-package ellama																	:ensure t)
(use-package humanoid-themes												:ensure t)
(use-package magit-commit-mark											:ensure t)
(use-package magit-delta														:ensure t)
(use-package magit-file-icons												:ensure t)
(use-package magit-filenotify												:ensure t)
(use-package magit-lfs															:ensure t)
(use-package window-layout													:ensure t)
(use-package inf-elixir															:ensure t)
(use-package mix																		:ensure t)
(use-package nix-env-install												:ensure t)
(use-package nixpkgs-fmt														:ensure t)
(use-package org-nix-shell													:ensure t)
(use-package nix-haskell-mode												:ensure t)
(use-package nix-modeline														:ensure t)
(use-package nix-ts-mode														:ensure t)
(use-package ob-nix																	:ensure t)
(use-package pretty-sha-path												:ensure t)
(use-package gptel																	:ensure t)
(use-package activities															:ensure t)
(use-package org-clock-agenda-daytime-mode					:ensure t)
(use-package coin-ticker														:ensure t)
(use-package company-solidity												:ensure t)
(use-package org-side-tree													:ensure t)
(use-package org2web																:ensure t)
(use-package workgroups2														:ensure t)
(use-package evil-tex																:ensure t)
(use-package latex-pretty-symbols										:ensure t)
(use-package ob-latex-as-png												:ensure t)
(use-package org-elp																:ensure t)
(use-package preview-dvisvgm												:ensure t)
(use-package xenops																	:ensure t)
(use-package evil																		:ensure t)
(use-package evil-goggles														:ensure t)
(use-package goto-chg																:ensure t)
(use-package powerline															:ensure t)
(use-package powerline-evil													:ensure t)
(use-package python-mode														:ensure t)
(use-package lsp-haskell														:ensure t)
(use-package lsp-ui																	:ensure t)
(use-package magit																	:ensure t)
(use-package vterm-toggle														:ensure t)
(use-package vterm																	:ensure t)
(use-package org-inline-pdf													:ensure t)
(use-package org-latex-impatient										:ensure t)
(use-package hasky-extensions												:ensure t)
(use-package hyai																		:ensure t)
(use-package company-ghci														:ensure t)
(use-package ac-haskell-process											:ensure t)
(use-package flycheck-haskell												:ensure t)
(use-package flymake-hlint													:ensure t)
(use-package ghc-imported-from											:ensure t)
(use-package haskell-emacs													:ensure t)
(use-package haskell-emacs-base											:ensure t)
(use-package haskell-emacs-text											:ensure t)
(use-package hasky-stack														:ensure t)
(use-package dante																	:ensure t)
(use-package csv-mode																:ensure t)
(use-package scratch-pop														:ensure t)
(use-package calfw-org															:ensure t)
(use-package idle-org-agenda												:ensure t)
(use-package fish-completion												:ensure t)
(use-package fish-mode															:ensure t)
(use-package slime																	:ensure t)
(use-package slime-company													:ensure t)
(use-package slime-repl-ansi-color									:ensure t)
(use-package sotlisp																:ensure t)
(use-package helm-ispell														:ensure t)
(use-package flyspell-correct-popup									:ensure t)
(use-package spell-fu																:ensure t)
(use-package auto-indent-mode												:ensure t)
(use-package lua-mode																:ensure t)
(use-package auto-complete-auctex										:ensure t)
(use-package launch																	:ensure t)
(use-package launch-mode														:ensure t)
(use-package bracketed-paste												:ensure t)
(use-package xml+																		:ensure t)
(use-package lsp-javacomp														:ensure t)
(use-package thread-dump														:ensure t)
(use-package tide																		:ensure t)
(use-package ts-comint															:ensure t)
(use-package gnus-desktop-notify										:ensure t)
(use-package gnu-elpa-keyring-update								:ensure t)
(use-package qml-mode																:ensure t)
(use-package typescript-mode												:ensure t)
(use-package highlight-doxygen											:ensure t)
(use-package organize-imports-java									:ensure t)
(use-package spinner																:ensure t)
(use-package auto-rename-tag												:ensure t)
(use-package helm-jstack														:ensure t)
(use-package java-imports														:ensure t)
(use-package jdecomp																:ensure t)
(use-package jdee																		:ensure t)
(use-package jtags																	:ensure t)
(use-package lsp-clangd															:ensure t)
(use-package lsp-elixir															:ensure t)
(use-package lsp-go																	:ensure t)
(use-package lsp-java																:ensure t)
(use-package lsp-mode																:ensure t)
(use-package lsp-python															:ensure t)
(use-package realgud-jdb														:ensure t)
(use-package x-path-walker													:ensure t)
(use-package flycheck-kotlin												:ensure t)
(use-package kotlin-mode														:ensure t)
(use-package flymake-go															:ensure t)
(use-package flycheck-demjsonlint										:ensure t)
(use-package json-mode															:ensure t)
(use-package flycheck-golangci-lint									:ensure t)
(use-package go-complete														:ensure t)
(use-package go-direx																:ensure t)
(use-package go-dlv																	:ensure t)
(use-package go-eldoc																:ensure t)
(use-package go-errcheck														:ensure t)
(use-package go-fill-struct													:ensure t)
(use-package go-guru																:ensure t)
(use-package go-imenu																:ensure t)
(use-package go-impl																:ensure t)
(use-package go-playground													:ensure t)
(use-package go-playground-cli											:ensure t)
(use-package go-projectile													:ensure t)
(use-package go-scratch															:ensure t)
(use-package golint																	:ensure t)
(use-package gore-mode															:ensure t)
(use-package gorepl-mode														:ensure t)
(use-package org-projectile													:ensure t)
(use-package ac-math																:ensure t)
